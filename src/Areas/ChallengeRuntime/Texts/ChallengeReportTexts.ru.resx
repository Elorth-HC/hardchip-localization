<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BestBlockSolution" xml:space="preserve">
    <value> (лучшее по блокам решение)</value>
  </data>
  <data name="EfficientP" xml:space="preserve">
    <value>Эффективно+</value>
  </data>
  <data name="TicksReport" xml:space="preserve">
    <value>Такты</value>
  </data>
  <data name="FastPP" xml:space="preserve">
    <value>Быстро++</value>
  </data>
  <data name="BlocksUsedTheFewerTheBetterNComplexSatisfactoryEfficient" xml:space="preserve">
    <value>Использовано блоков. Чем меньше, тем лучше.
Усложнено -&gt; Удовлетворительно -&gt; Эффективно</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>Изменить</value>
  </data>
  <data name="Blocks" xml:space="preserve">
    <value>   Блоки:</value>
  </data>
  <data name="Advanced" xml:space="preserve">
    <value>Усовершенствованно</value>
  </data>
  <data name="BestVolumeSolutionClickToCompare" xml:space="preserve">
    <value>Лучшее по объёму решение, нажмите, чтобы сравнить. Правый клик, чтобы установить как текущее.</value>
  </data>
  <data name="Efficient" xml:space="preserve">
    <value>Эффективно</value>
  </data>
  <data name="FunctionalSatisfactoryStreamlined" xml:space="preserve">
    <value>Функционально -&gt; Удовлетворительно -&gt; Оптимизировано</value>
  </data>
  <data name="VolumeUsedTheSmallerTheBetterNLargeSatisfactoryCompact" xml:space="preserve">
    <value>Использовано объёма. Чем меньше, тем лучше.
Громоздко -&gt; Удовлетворительно -&gt; Компактно</value>
  </data>
  <data name="TicksUsedTheFewerTheBetterNSlowSatisfactoryFast" xml:space="preserve">
    <value>Использовано тактов. Чем меньше, тем лучше.
Медленно -&gt; Удовлетворительно -&gt; Быстро</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>   Объём:</value>
  </data>
  <data name="Satisfactory" xml:space="preserve">
    <value>Удовлетворительно</value>
  </data>
  <data name="Grade01" xml:space="preserve">
    <value>Категория{0}: </value>
  </data>
  <data name="BestTickSolutionClickToCompare" xml:space="preserve">
    <value>Лучшее по тактам решение, нажмите, чтобы сравнить. Правый клик, чтобы установить как текущее.</value>
  </data>
  <data name="Compact" xml:space="preserve">
    <value>Компактно</value>
  </data>
  <data name="Complex" xml:space="preserve">
    <value>Усложнено</value>
  </data>
  <data name="MOSReport" xml:space="preserve">
    <value>МОП</value>
  </data>
  <data name="EfficientPP" xml:space="preserve">
    <value>Эффективно++</value>
  </data>
  <data name="BestVolumeSolution" xml:space="preserve">
    <value> (лучшее по объёму решение)</value>
  </data>
  <data name="Functional" xml:space="preserve">
    <value>Функционально</value>
  </data>
  <data name="PerformanceReport" xml:space="preserve">
    <value>{0} - отчет о производительности</value>
  </data>
  <data name="CompletedSuccessfully" xml:space="preserve">
    <value> completed successfully.</value>
  </data>
  <data name="VolumeReport" xml:space="preserve">
    <value>Объём</value>
  </data>
  <data name="ReducedPP" xml:space="preserve">
    <value>Уменьшено++</value>
  </data>
  <data name="MOSUsedTheFewerTheBetterNHighSatisfactoryReduced" xml:space="preserve">
    <value>Использовано МОП. Чем меньше, тем лучше.
Много -&gt; Удовлетворительно -&gt; Уменьшено</value>
  </data>
  <data name="MOS" xml:space="preserve">
    <value>   МОП:</value>
  </data>
  <data name="FastP" xml:space="preserve">
    <value>Быстро+</value>
  </data>
  <data name="Large" xml:space="preserve">
    <value>Громоздко</value>
  </data>
  <data name="Ticks" xml:space="preserve">
    <value>   Такты:</value>
  </data>
  <data name="PhotoMode" xml:space="preserve">
    <value>Фото-режим</value>
  </data>
  <data name="CompactP" xml:space="preserve">
    <value>Компактно+</value>
  </data>
  <data name="SaveBlueprint" xml:space="preserve">
    <value>Сохранить чертёж</value>
  </data>
  <data name="ReducedP" xml:space="preserve">
    <value>Уменьшено+</value>
  </data>
  <data name="BestMosSolution" xml:space="preserve">
    <value> (лучшее по количеству МОП решение)</value>
  </data>
  <data name="Masterpiece" xml:space="preserve">
    <value>Шедевр</value>
  </data>
  <data name="ChipChecked" xml:space="preserve">
    <value>Чип проверен!</value>
  </data>
  <data name="ExportBlueprintToANewHCDriveFileIntoTheClipboard" xml:space="preserve">
    <value>Экспортировать чертёж в новый файл HCDrive в буфер обмена</value>
  </data>
  <data name="Reduced" xml:space="preserve">
    <value>Уменьшено</value>
  </data>
  <data name="DataUnavailable" xml:space="preserve">
    <value>Данные недоступны</value>
  </data>
  <data name="BestBlockSolutionClickToCompare" xml:space="preserve">
    <value>Лучшее по количеству блоков решение, нажмите, чтобы сравнить. Правый клик, чтобы установить как текущее.</value>
  </data>
  <data name="LastChipChecked" xml:space="preserve">
    <value>Последний проверенный чип</value>
  </data>
  <data name="BestTickSolution" xml:space="preserve">
    <value> (лучшее по тактам решение)</value>
  </data>
  <data name="Streamlined" xml:space="preserve">
    <value>Оптимизировано</value>
  </data>
  <data name="CompactPP" xml:space="preserve">
    <value>Компактно++</value>
  </data>
  <data name="BestMosSolutionClickToCompare" xml:space="preserve">
    <value>Лучшее по количеству МОП решение, нажмите, чтобы сравнить. Правый клик, чтобы установить как текущее.</value>
  </data>
  <data name="Fast" xml:space="preserve">
    <value>Быстро</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>Много</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>Медленно</value>
  </data>
  <data name="SolutionOutOfDateRunAgainValidationToUpdate" xml:space="preserve">
    <value>Решение устарело, запустите проверку заново для обновления.</value>
  </data>
</root>